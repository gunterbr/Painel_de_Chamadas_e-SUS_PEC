<?php
    define('PHP_BOLT_KEY', 'EgwYT)hTp~kD?YNi>q9-yg!3aFL]Ww');
    bolt_decrypt( __FILE__ , PHP_BOLT_KEY); return 0;
    ##!!!##